{"ast":null,"code":"var _jsxFileName = \"/Users/gc3/Development/code/module-4-practice-woof-woof-atlanta-web-021720/src/DogInfo.js\";\nimport React, { Component } from \"react\";\nexport default class DoInfo extends Component {\n  constructor() {\n    super();\n\n    this.handleDogToggle = () => {\n      let pup = this.props.pup;\n      pup.isGoodDog = !pup.isGoodDog;\n      fetch(\"http://localhost:3000/pups/\".concat(pup.id), {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(pup)\n      }).then(resp => resp.json()).then(updatedPup => {\n        console.log(updatedPup);\n      });\n    };\n\n    this.state = {\n      dogBehavior: \"\"\n    };\n  }\n\n  render() {\n    let pup = this.props.pup;\n    this.setState({\n      dogBehavior: pup.isGoodDog\n    });\n    console.log(this.state.dogBehavior);\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: pup.image,\n      alt: pup.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, pup.name), pup.name != null && React.createElement(\"button\", {\n      onClick: this.handleDogToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, this.state.dogBehavior ? \"Good Dog!\" : \"Bad Dog!\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/gc3/Development/code/module-4-practice-woof-woof-atlanta-web-021720/src/DogInfo.js"],"names":["React","Component","DoInfo","constructor","handleDogToggle","pup","props","isGoodDog","fetch","id","method","headers","body","JSON","stringify","then","resp","json","updatedPup","console","log","state","dogBehavior","render","setState","image","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AAC1CE,EAAAA,WAAW,GAAG;AACV;;AADU,SAOdC,eAPc,GAOI,MAAM;AACpB,UAAIC,GAAG,GAAG,KAAKC,KAAL,CAAWD,GAArB;AACAA,MAAAA,GAAG,CAACE,SAAJ,GAAgB,CAACF,GAAG,CAACE,SAArB;AACAC,MAAAA,KAAK,sCAA+BH,GAAG,CAACI,EAAnC,GAAyC;AAC1CC,QAAAA,MAAM,EAAE,OADkC;AAE1CC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAFiC;AAK1CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,GAAf;AALoC,OAAzC,CAAL,CAOKU,IAPL,CAOUC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAPlB,EAQKF,IARL,CAQUG,UAAU,IAAI;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACH,OAVL;AAYH,KAtBa;;AAEV,SAAKG,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE;AADJ,KAAb;AAGH;;AAmBDC,EAAAA,MAAM,GAAG;AACL,QAAIlB,GAAG,GAAG,KAAKC,KAAL,CAAWD,GAArB;AACA,SAAKmB,QAAL,CAAc;AAAEF,MAAAA,WAAW,EAAEjB,GAAG,CAACE;AAAnB,KAAd;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,WAAvB;AACA,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAEjB,GAAG,CAACoB,KAAd;AAAqB,MAAA,GAAG,EAAEpB,GAAG,CAACqB,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKrB,GAAG,CAACqB,IAAT,CAFJ,EAGKrB,GAAG,CAACqB,IAAJ,IAAY,IAAZ,IAAoB;AAAQ,MAAA,OAAO,EAAE,KAAKtB,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwC,KAAKiB,KAAL,CAAWC,WAAX,GAAyB,WAAzB,GAAuC,UAA/E,CAHzB,CADJ;AAOH;;AApCyC","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class DoInfo extends Component {\n    constructor() {\n        super();\n        this.state = {\n            dogBehavior: \"\"\n        }\n    }\n\n    handleDogToggle = () => {\n        let pup = this.props.pup\n        pup.isGoodDog = !pup.isGoodDog\n        fetch(`http://localhost:3000/pups/${pup.id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(pup)\n        })\n            .then(resp => resp.json())\n            .then(updatedPup => {\n                console.log(updatedPup)\n            })\n\n    }\n\n    render() {\n        let pup = this.props.pup\n        this.setState({ dogBehavior: pup.isGoodDog })\n        console.log(this.state.dogBehavior)\n        return (\n            <React.Fragment>\n                <img src={pup.image} alt={pup.name}></img>\n                <h2>{pup.name}</h2>\n                {pup.name != null && <button onClick={this.handleDogToggle}>{this.state.dogBehavior ? \"Good Dog!\" : \"Bad Dog!\"}</button>}\n            </React.Fragment>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}