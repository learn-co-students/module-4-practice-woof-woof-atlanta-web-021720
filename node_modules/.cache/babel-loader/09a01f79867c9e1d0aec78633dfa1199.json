{"ast":null,"code":"var _jsxFileName = \"/Users/gc3/Development/code/module-4-practice-woof-woof-atlanta-web-021720/src/Dog.js\";\nimport React, { Component } from \"react\"; //Dog class\n\nexport default class Dog extends Component {\n  constructor() {\n    super();\n    this.state = {\n      allPups: []\n    };\n  } //Load allPups array with fetch request as component is finished loading \n\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/pups\").then(resp => resp.json()).then(pups => {\n      console.log(dogBehaviorFilter);\n      this.setState({\n        allPups: pups\n      });\n    });\n  } //Use map with allPups to create a span for each object and send it back to parent\n\n\n  render() {\n    return (//React Fragment allows a user to return multiple elements in a return without \n      //creating a new surrounding or containing element\n      React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, this.state.allPups.map(pup => React.createElement(\"span\", {\n        onClick: () => this.props.handleDogInfo(pup),\n        key: pup.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, pup.name)))\n    );\n  }\n\n}","map":{"version":3,"sources":["/Users/gc3/Development/code/module-4-practice-woof-woof-atlanta-web-021720/src/Dog.js"],"names":["React","Component","Dog","constructor","state","allPups","componentDidMount","fetch","then","resp","json","pups","console","log","dogBehaviorFilter","setState","render","map","pup","props","handleDogInfo","id","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;AACA,eAAe,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AACvCE,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAGH,GANsC,CAQvC;;;AACAC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,4BAAD,CAAL,CACKC,IADL,CACUC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADlB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYC,iBAAZ;AACA,WAAKC,QAAL,CAAc;AAAEV,QAAAA,OAAO,EAAEM;AAAX,OAAd;AACH,KALL;AAMH,GAhBsC,CAkBvC;;;AACAK,EAAAA,MAAM,GAAG;AAEL,WACI;AACA;AACA,0BAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKZ,KAAL,CAAWC,OAAX,CAAmBY,GAAnB,CAAwBC,GAAD,IACpB;AAAM,QAAA,OAAO,EAAE,MAAM,KAAKC,KAAL,CAAWC,aAAX,CAAyBF,GAAzB,CAArB;AAAoD,QAAA,GAAG,EAAEA,GAAG,CAACG,EAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkEH,GAAG,CAACI,IAAtE,CADH,CADL;AAHJ;AASH;;AA9BsC","sourcesContent":["import React, { Component } from \"react\"\n\n//Dog class\nexport default class Dog extends Component {\n    constructor() {\n        super()\n        this.state = {\n            allPups: []\n        }\n    }\n\n    //Load allPups array with fetch request as component is finished loading \n    componentDidMount() {\n        fetch(\"http://localhost:3000/pups\")\n            .then(resp => resp.json())\n            .then(pups => {\n                console.log(dogBehaviorFilter)\n                this.setState({ allPups: pups })\n            })\n    }\n\n    //Use map with allPups to create a span for each object and send it back to parent\n    render() {\n\n        return (\n            //React Fragment allows a user to return multiple elements in a return without \n            //creating a new surrounding or containing element\n            <React.Fragment>\n                {this.state.allPups.map((pup) => (\n                    <span onClick={() => this.props.handleDogInfo(pup)} key={pup.id}>{pup.name}</span>\n                ))}\n            </React.Fragment>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}