{"ast":null,"code":"var _jsxFileName = \"/Users/gc3/Development/code/module-4-practice-woof-woof-atlanta-web-021720/src/Dog.js\";\nimport React, { Component } from \"react\";\nexport default class Dog extends Component {\n  constructor() {\n    super();\n    this.state = {\n      allPups: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/pups\").then(resp => resp.json()).then(pups => {\n      this.setState({\n        allPups: pups\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, this.state.allPups.map(pup => React.createElement(\"span\", {\n      key: pup.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, pup.name)));\n  }\n\n}","map":{"version":3,"sources":["/Users/gc3/Development/code/module-4-practice-woof-woof-atlanta-web-021720/src/Dog.js"],"names":["React","Component","Dog","constructor","state","allPups","componentDidMount","fetch","then","resp","json","pups","setState","render","map","pup","id","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AACvCE,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAGH;;AAGDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,4BAAD,CAAL,CACKC,IADL,CACUC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADlB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACV,WAAKC,QAAL,CAAc;AAAEP,QAAAA,OAAO,EAAEM;AAAX,OAAd;AACH,KAJL;AAKH;;AAEDE,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKT,KAAL,CAAWC,OAAX,CAAmBS,GAAnB,CAAwBC,GAAD,IACpB;AAAM,MAAA,GAAG,EAAEA,GAAG,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoBD,GAAG,CAACE,IAAxB,CADH,CADL,CADJ;AAOH;;AAzBsC","sourcesContent":["import React, { Component } from \"react\"\n\nexport default class Dog extends Component {\n    constructor() {\n        super()\n        this.state = {\n            allPups: []\n        }\n    }\n\n\n    componentDidMount() {\n        fetch(\"http://localhost:3000/pups\")\n            .then(resp => resp.json())\n            .then(pups => {\n                this.setState({ allPups: pups })\n            })\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                {this.state.allPups.map((pup) => (\n                    <span key={pup.id}>{pup.name}</span>\n                ))}\n            </React.Fragment>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}